@startuml
participant SPA
participant "MPT API" as API
participant "TaskController" as Ctrl
participant "TaskService" as Srv
participant "MGI API" as API2

participant "TaskRepo" as Repo
participant "UserRepo" as ur
participant "TaskMapper" as Map
participant "UserMapper" as um

activate SPA
SPA -> API: GET(/api/tasks/)
activate API

API -> API: auth middleware 
API -> Ctrl: GetAll(type?,prending,user?)
activate Ctrl

Ctrl -> Ctrl: permissions middleware 
Ctrl -> Srv: GetAll(type?,prending,user?)
activate Srv

Srv -> Repo: GetAllAsync(type?,prending,user?)
activate Repo
Repo --> Srv: Task
deactivate Repo

Srv -> Srv: new List tasksDto

loop for each Task

    Srv -> ur: getUserById(ID)
    activate ur
    deactivate ur
    Srv -> um: ToDtoTaskInfo(user)
    activate um
    deactivate um

    alt Task is SurveillanceTask

        Srv -> API2: GET(/api/floor/:id)
        activate API2
        deactivate API2

        Srv -> Map: toFullDTO(task, floor, user)
        activate Map
        Map --> Srv: SurveillanceTask
        deactivate Map

        Srv -> Srv: tasksDto.add(SurveillanceTask)
    else Task is PickupDeliveryTask
        Srv -> Map: toFullDTO(task, user)
        activate Map
        Map --> Srv: PickupDeliveryTask
        deactivate Map

        Srv -> Srv: tasksDto.add(PickupDeliveryTask)
    end

end

Srv --> Ctrl: tasksDto
deactivate Srv

Ctrl --> API: status code 200
deactivate Ctrl

API --> SPA: success
deactivate API

@enduml