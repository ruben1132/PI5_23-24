name: Deploy and Execute Commands

on:
  push:
    branches:
      - main

jobs:
  deploy_and_execute:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Accept SSH Host Key
        run: |
          # Replace these variables with your SSH server details
          SERVER_IP="vsgate-ssh.dei.isep.ipp.pt"
          SSH_PORT="10655"
  
          # Retrieve the SSH host key from the server
          SSH_HOST_KEY=$(ssh-keyscan -p $SSH_PORT $SERVER_IP)
  
          # Add the host key to the known hosts file
          echo "$SSH_HOST_KEY" >> .github/workflows/known_hosts

      - name: Execute SSH Commands
        run: |
          # Replace these variables with your SSH and server details
          SERVER_IP="vsgate-ssh.dei.isep.ipp.pt"
          SSH_PORT="10655"  # Replace with your desired SSH port
          SSH_USERNAME="root"
          SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"
  
          # Save SSH private key to a file and set permissions
          echo "$SSH_PRIVATE_KEY" > ssh_key
          chmod 600 ssh_key
  
          # SSH into the server and execute commands
          ssh -i ssh_key -o UserKnownHostsFile=.github/workflows/known_hosts -p $SSH_PORT "$SSH_USERNAME@$SERVER_IP" "rm -rf /home/ubuntu/API/mgi"
          ssh -i ssh_key -o UserKnownHostsFile=.github/workflows/known_hosts -p $SSH_PORT "$SSH_USERNAME@$SERVER_IP" "cd /home/ubuntu/API && ./killAPI.sh"

          # Cleanup (remove the private key)
          rm ssh_key

          
      - name: Deploy to SFTP
        run: |
          # Replace these variables with your FTP server details
          SFTP_SERVER="vsgate-ssh.dei.isep.ipp.pt"
          SFTP_PORT="10655"
          SFTP_USERNAME="root"
          SFTP_PRIVATE_KEY="${{ secrets.SFTP_PRIVATE_KEY }}" # Correct syntax for referencing a secret

          # Save SFTP private key to a file and set permissions
          echo "$SFTP_PRIVATE_KEY" > sftp_key
          chmod 600 sftp_key

          # Use sftp to transfer files to the SFTP server
          sftp -i sftp_key -oPort=$SFTP_PORT -oUserKnownHostsFile=.github/workflows/known_hosts "$SFTP_USERNAME@$SFTP_SERVER" <<EOF
          put -r mgi /home/ubuntu/API
          bye
          EOF

          # Cleanup (remove the private key)
          rm sftp_key
        
      - name: Accept SSH Host Key
        run: |
          # Replace these variables with your SSH server details
          SSH_SERVER="vsgate-ssh.dei.isep.ipp.pt"
          SSH_PORT="10655"
          SSH_USERNAME="root"

          # Retrieve the SSH host key from the server
          SSH_HOST_KEY=$(ssh-keyscan -p $SSH_PORT $SSH_SERVER)

          # Add the host key to the known hosts file
          echo "$SSH_HOST_KEY" >> .github/workflows/known_hosts

      - name: Execute SSH Commands
        run: |
          # Replace these variables with your SSH and server details
          SERVER_IP="vsgate-ssh.dei.isep.ipp.pt"
          SSH_PORT="10655"  # Replace with your desired SSH port
          SSH_USERNAME="root"
          SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"
  
          # Save SSH private key to a file and set permissions
          echo "$SSH_PRIVATE_KEY" > ssh_key
          chmod 600 ssh_key
  
          # SSH into the server and execute commands
          ssh -i ssh_key -o UserKnownHostsFile=.github/workflows/known_hosts -p $SSH_PORT "$SSH_USERNAME@$SERVER_IP" "cd /home/ubuntu/API/mgi && sudo pnpm i"
          ssh -i ssh_key -o UserKnownHostsFile=.github/workflows/known_hosts -p $SSH_PORT "$SSH_USERNAME@$SERVER_IP" "cd /home/ubuntu/API/mgi && sudo pnpm start &"

          # Cleanup (remove the private key)
          rm ssh_key
     
